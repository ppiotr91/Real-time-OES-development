function [OUT] = molecularConstants(system, Vf, corr)
    if nargin <3
        corr = ones(2,21);
    end    
	
	OUT1    = zeros(Vf+1, 7);
    OUT2    = zeros(Vf+1, 7);
    v1      = 0:Vf;

    for i   = 1:Vf+1
        [const1, const2]    = getDunhamConstants(system);
		const1 	= const1.*corr(1,:);
		const2 	= const2.*corr(2,:);
        [out1, out2]        = calcMolConstants(const1, const2, v1(i), v1(i));
        
        OUT1(i,:) = out1;
        OUT2(i,:) = out2;
    end

    OUT.con1    = OUT1;
    OUT.con2    = OUT2;

    function [const1, const2] = getDunhamConstants(system)
        switch system
            case '2+'
                t1  	= 89134.6049720605;
                w1  	= [2043.06994966875	28.4084312405080	2.08806666984963	-0.534875341126645	0];
                b1  	= [1.82827348498571	0.0186516489923553	-0.00228021975560264	0.000732697327376982	-0.000149971535885995];
                d1  	= [5.95E-06	0.00E+00	0.00E+00];
                y1  	= [21.558	0.000	0.000];
                g1  	= [0.000E+00	0	0];
				epsi1 	= 0;

                t2  	= 59611.7198670132;
                w2  	= [1740.91340580086	14.1276755212053	-0.0568860482605436	0.00360946645554665	0];
                b2  	= [1.63989282366830	0.0185634533372597	-7.69936848197515e-05	0	0];
                d2  	= [5.81E-06	0E+00	0E+00];
                y2  	= [25.946	0.00	0.00];
                g2  	= [0.00	0.00	0.00];
				epsi2 	= 0;
			case 'swan'
                t1  	= 20022.5462561189;
                w1  	= [1788.10795687474	16.4747988072963	-0.512211557150893	0	0];
                b1  	= [1.75231532126221	0.0161838041806579	-0.00128863237159097	0	0];
                d1  	= [6.74E-06	0E+00	0E+00];
                y1  	= [-8.02094	0.00	0.00];
                g1  	= [0.000E+00	0.00	0.00];
				epsi1 	= 0;

                t2  	= 718.902925940919;
                w2  	= [1635.68469183295	11.6927240517587	0	0	0];
                b2  	= [1.63251537600414	0.0165953628232477	0	0	0];
                d2  	= [6.44E-06	0E+00	0E+00];
                y2  	= [-9.40191	0.00	0.00];
                g2  	= [0.000E+00	0.00	0.00];
				epsi2 	= 0;
            case '1-'
                t1  = 25454.7569872765;
                w1  = [2424.45361020808	24.3099695103247	-0.508978227366161	0.0178480590222148	-2.81346345879155e-09];
                b1  = [2.09122218395819	0.0315665161231041	-9.88815494132680e-06	6.62203187555078e-09	5.07513573828310e-09];
                d1  = [7.16602996166696e-06	9.90070686150734e-09	-3.20086036172510e-11];
                y1  = [0    0   0];
                g1  = [0.00265620842833736	7.86586807808616e-09	-3.96685549290595e-11];
                epsi1 	= 0;

                t2  = 0.00;
                w2  = [2194.69434811277	10.7070344907073	-0.00522784469679279	-3.32498423921766e-05	9.72045943905534e-09];
                b2  = [1.92955696126295	0.0116870789337209	6.97761703448292e-05	1.01869535585902e-08	-3.60357768787902e-09];
                d2  = [6.82798813791715e-06	-4.89788085709404e-09	-4.88813434593735e-09];
                y2  = [0    0   0];
                g2  = [0.0656468002166958	6.12945412578058e-09	-4.32051097876298e-09];
                epsi2 	= 0;
            case 'CNvio'
                t1  	= 25733.9806863997;
                w1  	= [1706.46334707388	24.9076521038975	-0.238449364923049	4.20803654978094e-06	1.68980071394551e-08];
                b1  	= [1.81961354119263	-8.96397974194890e-06	-4.19627128038942e-10	2.88685284385450e-11	-3.60585301829110e-16];
                d1  	= [6.48162756734223e-06	0	0];
                y1  	= [0	0.00	0.00];
                g1  	= [0.0192459621655434	0	0];
				epsi1 	= 0;

                t2  	= 0.00;
                w2  	= [1613.67143290015	18.5951325337211	0.00677979540111530	0	0];
                b2  	= [1.73160352509198	-1.82810643288613e-05	6.28101565251682e-06	1.03326005075317e-13	0];
                d2  	= [6.46228220594652e-06	0	0];
                y2  	= [0	0.00	0.00];
                g2  	= [0.00795721085622255	0	0];
				epsi2 	= 0;
        end
        const1  = [t1, w1, b1, d1, y1, g1, epsi1];
        const2  = [t2, w2, b2, d2, y2, g2, epsi2];
    end

    function [out1, out2] = calcMolConstants(c1, c2, V1, V2)
        %con1/con2 variable allocation is as follows: 
        %1	2	3	4	5	6	7	8	9	10	11	12	13	14  16	(index)
        %T0	w	wxe	wye	wze	wae	B0	a	ax	ay	az	De	Y1	G1  epsi	(quantity)    
        Te1     = c1(1);
        Te2     = c2(1);
        
        Gv1     = c1(2)  * (V1 + 0.5)   ...
                - c1(3) * (V1 + 0.5).^2 ...
                + c1(4) * (V1 + 0.5).^3 ...
                + c1(5) * (V1 + 0.5).^4 ...
                + c1(6) * (V1 + 0.5).^5;
        Gv2     = c2(2)  * (V2 + 0.5)   ...
                - c2(3) * (V2 + 0.5).^2 ...
                + c2(4) * (V2 + 0.5).^3 ...
                + c2(5) * (V2 + 0.5).^4 ...
                + c2(6) * (V2 + 0.5).^5;
                  
        Bv1     = c1(7) - c1(8) * (V1 + 0.5)     ...
                        + c1(9) * (V1 + 0.5).^2  ...
                        + c1(10) * (V1 + 0.5).^3 ...
                        + c1(11) * (V1 + 0.5).^4; 
        Bv2     = c2(7) - c2(8) * (V2 + 0.5)     ...
                        + c2(9) * (V2 + 0.5).^2  ...
                        + c2(10) * (V2 + 0.5).^3 ...
                        + c2(11) * (V2 + 0.5).^4;
                 
        Dv1     = c1(12) + c1(13) * (V1 + 0.5) ... 
                         + c1(14) * (V1 + 0.5).^2;
        Dv2     = c2(12) + c2(13) * (V2 + 0.5) ...
                         + c2(14) * (V2 + 0.5).^2;

        Y1      = c1(15) + c1(16) * (V1 + 0.5) ... 
                         + c1(17) * (V1 + 0.5).^2;
        Y2      = c2(15) + c2(16) * (V2 + 0.5) ...
                         + c2(17) * (V2 + 0.5).^2;

        g1      = c1(18) + c1(19) * (V1 + 0.5) ... 
                         + c1(20) * (V1 + 0.5).^2;
        g2      = c2(18) + c2(19) * (V2 + 0.5) ...
                         + c2(20) * (V2 + 0.5).^2;
		
		epsi1 	= c1(21);
		epsi2 	= c2(21);

        out1    = [Te1, Gv1, Bv1, Dv1, Y1, g1, epsi1];
        out2    = [Te2, Gv2, Bv2, Dv2, Y2, g2, epsi2];
    end

end